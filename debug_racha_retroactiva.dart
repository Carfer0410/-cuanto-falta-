void main() {
  print('=== DEBUG CONFIRMACI√ìN RETROACTIVA ===');
  
  // Simular el estado ANTES de confirmar hoy
  final confirmationHistory = [
    DateTime(2025, 7, 20), // D√≠a 1 retroactivo
    DateTime(2025, 7, 21), // D√≠a 2 retroactivo
  ];
  
  print('Estado ANTES de confirmar hoy:');
  print('Confirmaciones: ${confirmationHistory.map((d) => '${d.day}/${d.month}').join(', ')}');
  print('Racha esperada: 2 d√≠as');
  
  // Simular agregar confirmaci√≥n de HOY
  final newConfirmation = DateTime(2025, 7, 22);
  final newHistory = [...confirmationHistory, newConfirmation];
  
  print('\nDespu√©s de confirmar HOY (22 julio):');
  print('Confirmaciones: ${newHistory.map((d) => '${d.day}/${d.month}').join(', ')}');
  
  // Simular el c√°lculo de racha (_calculateStreak)
  final sortedConfirmations = [...newHistory];
  sortedConfirmations.sort((a, b) => b.compareTo(a)); // M√°s reciente primero
  
  print('\nConfirmaciones ordenadas (m√°s reciente primero):');
  for (final conf in sortedConfirmations) {
    print('  - ${conf.day}/${conf.month}/${conf.year}');
  }
  
  final today = DateTime(2025, 7, 22, 0, 0, 0);
  int currentStreak = 0;
  DateTime? expectedDate = DateTime(today.year, today.month, today.day);
  
  print('\nC√°lculo paso a paso:');
  print('Empezando desde hoy: ${expectedDate!.day}/${expectedDate.month}');
  
  for (final confirmation in sortedConfirmations) {
    final confirmDate = DateTime(confirmation.year, confirmation.month, confirmation.day);
    
    print('\nVerificando confirmaci√≥n: ${confirmDate.day}/${confirmDate.month}');
    print('  Esperada: ${expectedDate!.day}/${expectedDate.month}');
    print('  ¬øCoincide? ${confirmDate.isAtSameMomentAs(expectedDate)}');
    
    if (expectedDate != null && confirmDate.isAtSameMomentAs(expectedDate)) {
      currentStreak++;
      expectedDate = expectedDate.subtract(Duration(days: 1));
      print('  ‚úÖ Racha aumenta a: $currentStreak');
      print('  Siguiente esperada: ${expectedDate.day}/${expectedDate.month}');
    } else if (currentStreak == 0) {
      // Si es la primera confirmaci√≥n pero no es de hoy, empezar racha desde ah√≠
      currentStreak = 1;
      expectedDate = confirmDate.subtract(Duration(days: 1));
      print('  üîÑ Primera confirmaci√≥n no es hoy, empezar desde aqu√≠: $currentStreak');
      print('  Siguiente esperada: ${expectedDate.day}/${expectedDate.month}');
    } else {
      // Hueco en la racha, parar
      print('  ‚ùå Hueco en la racha, parar');
      break;
    }
  }
  
  print('\n=== RESULTADO FINAL ===');
  print('Racha calculada: $currentStreak d√≠as');
  print('Racha esperada: 3 d√≠as');
  print(currentStreak == 3 ? '‚úÖ CORRECTO' : '‚ùå INCORRECTO - HAY UN BUG');
}
