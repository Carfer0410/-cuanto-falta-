void main() async {
  print('üß™ === TEST CORRECCI√ìN CHALLENGEID ===');
  
  // Simular el flujo CORREGIDO
  
  // 1. Lista existente de counters
  List<dynamic> existingCounters = [
    {'title': 'ejercicio'},
    {'title': 'leer'},
  ];
  
  print('1Ô∏è‚É£ Estado inicial:');
  print('   Counters existentes: ${existingCounters.length}');
  print('   √çndices: 0="ejercicio", 1="leer"');
  
  // 2. Agregar nuevo counter
  final newCounter = {'title': 'meditar'};
  existingCounters.add(newCounter);
  
  print('\n2Ô∏è‚É£ Despu√©s de agregar nuevo counter:');
  print('   Counters totales: ${existingCounters.length}');
  print('   √çndices: 0="ejercicio", 1="leer", 2="meditar"');
  
  // 3. Generar challengeId CORREGIDO
  final challengeId = 'challenge_${existingCounters.length - 1}'; // Ahora usa length - 1
  
  print('\n3Ô∏è‚É£ ChallengeId generado:');
  print('   F√≥rmula: challenge_\${list.length - 1}');
  print('   C√°lculo: challenge_\${${existingCounters.length} - 1}');
  print('   Resultado: $challengeId');
  
  // 4. Verificar coincidencia con UI
  final uiIndex = 2; // El nuevo counter est√° en posici√≥n 2
  final uiChallengeId = 'challenge_$uiIndex';
  
  print('\n4Ô∏è‚É£ Verificaci√≥n con UI:');
  print('   √çndice del nuevo counter en UI: $uiIndex');
  print('   ChallengeId que busca la UI: $uiChallengeId');
  print('   ChallengeId guardado en streak: $challengeId');
  print('   ¬øCoinciden?: ${challengeId == uiChallengeId ? "‚úÖ S√ç" : "‚ùå NO"}');
  
  if (challengeId == uiChallengeId) {
    print('\nüéâ ¬°CORRECCI√ìN EXITOSA!');
    print('   La UI ahora encontrar√° la racha correctamente');
  } else {
    print('\n‚ùå A√öN HAY PROBLEMA');
    print('   La UI seguir√° sin encontrar la racha');
  }
  
  print('\nüìã Para probar:');
  print('1. Crea un reto retroactivo');
  print('2. Verifica en los logs que se crea con challengeId correcto');
  print('3. La racha deber√≠a aparecer inmediatamente en la UI');
}
